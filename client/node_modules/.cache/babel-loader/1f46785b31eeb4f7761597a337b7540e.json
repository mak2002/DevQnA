{"ast":null,"code":"var _jsxFileName = \"/Users/mak/projects/web3/stackoverflow-clone/client/src/components/AskQuestionBar.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AskQuestion() {\n  const details = [{\n    title: \"title1\",\n    description: 'Be specific and imagine you\"re asking a question to another person.',\n    inputWidth: \"\"\n  }, {\n    title: \"title1\",\n    description: 'Be specific and imagine you\"re asking a question to another person.',\n    inputWidth: \"\"\n  }, {\n    title: \"title1\",\n    description: 'Be specific and imagine you\"re asking a question to another person.',\n    inputWidth: \"\"\n  }];\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen bg-stone-800 pl-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"py-5 text-left text-2xl font-bold text-white\",\n        children: \"Ask a public question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex w-4/6 flex-col items-start bg-slate-800 p-6\",\n        children: details.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: item.title,\n              className: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c = AskQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"AskQuestion\");","map":{"version":3,"names":["React","AskQuestion","details","title","description","inputWidth","map","item","index"],"sources":["/Users/mak/projects/web3/stackoverflow-clone/client/src/components/AskQuestionBar.tsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function AskQuestion() {\n  const details = [\n    {\n      title: \"title1\",\n      description:\n        'Be specific and imagine you\"re asking a question to another person.',\n      inputWidth: \"\",\n    },\n    {\n      title: \"title1\",\n      description:\n        'Be specific and imagine you\"re asking a question to another person.',\n      inputWidth: \"\",\n    },\n    {\n      title: \"title1\",\n      description:\n        'Be specific and imagine you\"re asking a question to another person.',\n      inputWidth: \"\",\n    },\n  ];\n  return (\n    <React.Fragment>\n      <div className=\"h-screen bg-stone-800 pl-5\">\n        <h1 className=\"py-5 text-left text-2xl font-bold text-white\">\n          Ask a public question\n        </h1>\n\n        {/* <div className=\"flex flex-col items-start bg-slate-800 w-4/6 p-6\">\n          <h3 className=\"text-xl text-white\">Title</h3>\n          <p className=\"text-white text-sm\">\n            Be specific and imagine you're asking a question to another person.\n          </p>\n\n          <input type=\"text\" name=\"\" placeholder=\"e.g. Is there an R function for finding the index of an element in a vector?\" className=\"text-white w-full p-1\" id=\"\" />\n        </div> */}\n\n        <div className=\"flex w-4/6 flex-col items-start bg-slate-800 p-6\">\n          {details.map((item, index) => {\n            return (\n              <div>\n                <input type=\"text\" placeholder={item.title} className=\"\" />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,eAAe,SAASC,WAAT,GAAuB;EACpC,MAAMC,OAAO,GAAG,CACd;IACEC,KAAK,EAAE,QADT;IAEEC,WAAW,EACT,qEAHJ;IAIEC,UAAU,EAAE;EAJd,CADc,EAOd;IACEF,KAAK,EAAE,QADT;IAEEC,WAAW,EACT,qEAHJ;IAIEC,UAAU,EAAE;EAJd,CAPc,EAad;IACEF,KAAK,EAAE,QADT;IAEEC,WAAW,EACT,qEAHJ;IAIEC,UAAU,EAAE;EAJd,CAbc,CAAhB;EAoBA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,uBACE;MAAK,SAAS,EAAC,4BAAf;MAAA,wBACE;QAAI,SAAS,EAAC,8CAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAcE;QAAK,SAAS,EAAC,kDAAf;QAAA,UACGH,OAAO,CAACI,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,KAAiB;UAC5B,oBACE;YAAA,uBACE;cAAO,IAAI,EAAC,MAAZ;cAAmB,WAAW,EAAED,IAAI,CAACJ,KAArC;cAA4C,SAAS,EAAC;YAAtD;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADF;QAKD,CANA;MADH;QAAA;QAAA;QAAA;MAAA,QAdF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA4BD;KAjDuBF,W"},"metadata":{},"sourceType":"module"}